require "HelloLibrary.Modules.ALL"

--======================================--
--(( ALREADY COMPLETED SCRIPT EXAMPLE ))--
--======================================--

-- Definera egenskaper synliga via "properties" fönstret
go.property("move_speed", 500) -- horisontell rörelse i enheter/s
go.property("jump_force", 800) -- enheter/s, men notera att gravitationen kommer appliseras
go.property("gravity", 1000) -- Hastighet i enheter/s/s
go.property("health", 3) -- Liv

function init(self)
	-- Lägg grunderna för fysik modulen
	init_physics(self)
	-- Lägg grunderna för livshantering
	init_health(self)
	
	-- Registrera att detta skript önskar läsa input
	msg.post(".", "acquire_input_focus")
	-- Uppdatera livräknaren
	msg.post("hud", "update_hud_health", { health = self.health, max_health = self.max_health })
end

function update(self, dt)
	-- Uppdatera animationer
	update_animations(self)
	-- Uppdatera kollision
	update_physics(self, dt)
end

function on_message(self, message_id, message, sender)
	-- Hantera kollision meddelanden
	handle_physics_messages(self, message_id, message, sender)
	-- Hantera liv-relaterade meddelanden
	handle_health_messages(self, message_id, message, sender)
	
	-- Egna lyssnare
	if message_id == hash("damage")
	or message_id == hash("heal")
	then
		-- Uppdatera livräknaren
		msg.post("hud", "update_hud_health", { health = self.health, max_health = self.max_health })
	end
end

function on_input(self, action_id, action)
	-- Om spelaren trycker på Left knappen
	if action_id == hash("hero_left") then
		move_left(self, go)
	end
		
	-- Om spelaren trycker på Right knappen
	if action_id == hash("hero_right") then
		move_right(self, go)
	end
	
	-- Om spelaren trycker på Jump knappen
	if action_id == hash("hero_jump") then
		jump(self)
	end
	
	-- Om spelaren trycker på Restart knappen
	if action_id == hash("respawn") then
		restart()
	end
end