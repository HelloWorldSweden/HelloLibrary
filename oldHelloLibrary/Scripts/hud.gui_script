require "HelloLibrary.Modules.RestartGame"

function init(self)
    -- Bestäm standardvärden här
    self.HP = 3 -- liv man börjar med
    self.maxHP = 3 -- max liv
    self.invis = 1 -- Hur länge man är odödlig i sekunder
    
    -- Odödlighets variabler
    self.invis_since = -math.huge -- = -∞
end

function on_message(self, message_id, message, sender)
	-- öka poäng texten
	if message_id == hash("increase_coin") then
		self.score = gui.get_node("coins")
		gui.set_text(self.score, gui.get_text(self.score) + 1) 
	end
	
	-- lägg till liv
	if message_id == hash("increase_heart") then
		self.HP = self.HP + 1
		checkHP(self)
		
		local life = getLifeNode(self.HP)
		gui.set_color(life, vmath.vector4(1, 1, 1, 1))
	end
	
	-- ta bort liv om spelaren inte är odödlig
	if message_id == hash("decrease_heart") and not isInvis(self) then
		self.HP = self.HP - 1
		checkHP(self)		

		local life =  getLifeNode(self.HP + 1)
		gui.set_color(life, vmath.vector4(1, 1, 1, 0))
		
		-- Markera att odödligheten börjar nu
		self.invis_since = os.clock()
	end
end

function checkHP(self)
	if self.HP <= 0 then
		death(self)
		self.HP = 0
	end
	
	if self.HP > self.maxHP then
		self.HP = self.maxHP
	end
	
	setText(self.HP)
end

function setText(newValue)
	gui.set_text(gui.get_node("lives"), newValue)
end

function getLifeNode(index)
	return gui.get_node("life"..tostring(index))
end

function death(self)
	msg.post("hud#hp", "GameOver")
end

function isInvis(self)
	-- *true om tidskillnaden är mindre än /self.invis/ sekunder
	return os.clock() - self.invis_since < self.invis
end